@page "/Ingreso-Revistas"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>IngresosRevistas</h3>

<EditForm Model="@revista" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label label for "Titulo"> Ingreso Titulo</label>
        <InputText id="Titulo" @bind-Value="revista.Titulo" class="from-control" />
        <ValidationMessage For="() => revista.Titulo" />
    </div

    <div class="form-group">
        <label label for "Autor"> Ingreso Autor</label>
        <InputText id="Autor" @bind-Value="revista.Autor" class="from-control" />
        <ValidationMessage For="() => revista.Autor" />
    </div

    <div class="form-group">
        <label label for "Genero"> Ingreso Genero</label>
        <InputText id="Genero" @bind-Value="revista.Genero" class="from-control" />
        <ValidationMessage For="() => revista.Genero" />
    </div

    <div class="form-group">
        <label label for "AnioPubli"> Ingreso Anio Publicacion</label>
        <InputDate id="AnioPubli" @bind-Value="revista.AnioPubli" class="from-control" />
    </div

    <div class="form-group">
        <label label for "Volumen"> Ingreso Volumen</label>
        <InputText id="Volumen" @bind-Value="revista.Volumen" class="from-control" />
        <ValidationMessage For="() => revista.Volumen" />
    </div
    <div class="form-group">
        <label label for "Numero"> Ingreso Numero de ejemplar</label>
        <InputNumber id="Numero" @bind-Value="revista.Numero" class="from-control" />
    </div
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    </div>

</EditForm>
@if (revistas != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Titulo</th>
                <th>Autor</th>
                <th>Genero</th>
                <th>AnioPublicacion</th>
                <th>Volumen</th>
                <th>Numero</th>
               
            </tr>
        </thead>
        <tbody>
            @foreach (var revista2 in revistas)
            {
                <tr>
                    <td>@revista2.Titulo</td>
                    <td>@revista2.Autor</td>
                    <td>@revista2.Genero</td>
                    <td>@revista2.AnioPubli</td>
                    <td>@revista2.Volumen</td>
                    <td>@revista2.Numero</td>
                    <td>
                        <button class="btn btn-warning"
                         @onclick="@(() => NavigationManager.NavigateTo($"/Edicion-Revistas/{revista2.Titulo}"))">
                         Editar   
                         </button>
                    </td>
                    <td>
                        <button class="btn btn-danger"
                            @onclick="@(() => Borrar(revista2.Titulo))">
                            Eliminar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    List<clsRevistas> revistas = new List<clsRevistas>();
    private clsRevistas revista = new clsRevistas();

    protected async Task Guardar()
    {
        revistas.Add(revista);
        revista = new clsRevistas();
        await localStorage.SetItemAsync("JsonLibros", revistas);

    }
    protected override async Task OnInitializedAsync()
    {  //La primera vez que se corre poner en comentarios, pues como no existen datos
       //convierta la lista catedraticos en null
       revistas = await localStorage.GetItemAsync<List<clsRevistas>>("JsonLibros");
    }
    protected async Task Borrar(string Eliminado)
    {
        revistas.Remove(revistas.First(c => c.Titulo == Eliminado));
        await localStorage.SetItemAsync("JsonLibros", revistas);
    }

}
